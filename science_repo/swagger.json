{"swagger": "2.0", "info": {"title": "Living Science Documents API", "description": "API documentation for the Living Science Documents platform", "termsOfService": "https://www.google.com/policies/terms/", "contact": {"email": "contact@example.com"}, "license": {"name": "BSD License"}, "version": "v1"}, "host": "localhost:8000", "schemes": ["http"], "basePath": "/srahmel/living-science-documents/api", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Bearer": {"type": "apiKey", "name": "Authorization", "in": "header"}}, "security": [{"Bearer": []}], "paths": {"/ai/ai-comment-suggestions/": {"get": {"operationId": "ai_ai-comment-suggestions_list", "description": "API endpoint for AI comment suggestions.", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/AICommentSuggestionList"}}}}}}, "tags": ["ai"]}, "post": {"operationId": "ai_ai-comment-suggestions_create", "description": "API endpoint for AI comment suggestions.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AICommentSuggestion"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/AICommentSuggestion"}}}, "tags": ["ai"]}, "parameters": []}, "/ai/ai-comment-suggestions/generate/": {"post": {"operationId": "ai_ai-comment-suggestions_generate", "description": "Generate AI comment suggestions for a document version.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AICommentSuggestion"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/AICommentSuggestion"}}}, "tags": ["ai"]}, "parameters": []}, "/ai/ai-comment-suggestions/{id}/": {"get": {"operationId": "ai_ai-comment-suggestions_read", "description": "API endpoint for AI comment suggestions.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/AICommentSuggestion"}}}, "tags": ["ai"]}, "put": {"operationId": "ai_ai-comment-suggestions_update", "description": "API endpoint for AI comment suggestions.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AICommentSuggestion"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/AICommentSuggestion"}}}, "tags": ["ai"]}, "patch": {"operationId": "ai_ai-comment-suggestions_partial_update", "description": "API endpoint for AI comment suggestions.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AICommentSuggestion"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/AICommentSuggestion"}}}, "tags": ["ai"]}, "delete": {"operationId": "ai_ai-comment-suggestions_delete", "description": "API endpoint for AI comment suggestions.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["ai"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this ai comment suggestion.", "required": true, "type": "integer"}]}, "/ai/ai-comment-suggestions/{id}/approve/": {"post": {"operationId": "ai_ai-comment-suggestions_approve", "description": "Approve an AI comment suggestion and create a real comment.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AICommentSuggestion"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/AICommentSuggestion"}}}, "tags": ["ai"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this ai comment suggestion.", "required": true, "type": "integer"}]}, "/ai/ai-comment-suggestions/{id}/modify_and_approve/": {"post": {"operationId": "ai_ai-comment-suggestions_modify_and_approve", "description": "Modify and approve an AI comment suggestion.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AICommentSuggestion"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/AICommentSuggestion"}}}, "tags": ["ai"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this ai comment suggestion.", "required": true, "type": "integer"}]}, "/ai/ai-comment-suggestions/{id}/reject/": {"post": {"operationId": "ai_ai-comment-suggestions_reject", "description": "Reject an AI comment suggestion.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AICommentSuggestion"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/AICommentSuggestion"}}}, "tags": ["ai"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this ai comment suggestion.", "required": true, "type": "integer"}]}, "/ai/ai-feedback/": {"get": {"operationId": "ai_ai-feedback_list", "description": "API endpoint for AI feedback.", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/AIFeedback"}}}}}}, "tags": ["ai"]}, "post": {"operationId": "ai_ai-feedback_create", "description": "API endpoint for AI feedback.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AIFeedback"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/AIFeedback"}}}, "tags": ["ai"]}, "parameters": []}, "/ai/ai-feedback/{id}/": {"get": {"operationId": "ai_ai-feedback_read", "description": "API endpoint for AI feedback.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/AIFeedback"}}}, "tags": ["ai"]}, "put": {"operationId": "ai_ai-feedback_update", "description": "API endpoint for AI feedback.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AIFeedback"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/AIFeedback"}}}, "tags": ["ai"]}, "patch": {"operationId": "ai_ai-feedback_partial_update", "description": "API endpoint for AI feedback.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AIFeedback"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/AIFeedback"}}}, "tags": ["ai"]}, "delete": {"operationId": "ai_ai-feedback_delete", "description": "API endpoint for AI feedback.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["ai"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this ai feedback.", "required": true, "type": "integer"}]}, "/ai/ai-models/": {"get": {"operationId": "ai_ai-models_list", "description": "API endpoint for AI models.", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/AIModel"}}}}}}, "tags": ["ai"]}, "post": {"operationId": "ai_ai-models_create", "description": "API endpoint for AI models.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AIModel"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/AIModel"}}}, "tags": ["ai"]}, "parameters": []}, "/ai/ai-models/{id}/": {"get": {"operationId": "ai_ai-models_read", "description": "API endpoint for AI models.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/AIModel"}}}, "tags": ["ai"]}, "put": {"operationId": "ai_ai-models_update", "description": "API endpoint for AI models.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AIModel"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/AIModel"}}}, "tags": ["ai"]}, "patch": {"operationId": "ai_ai-models_partial_update", "description": "API endpoint for AI models.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AIModel"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/AIModel"}}}, "tags": ["ai"]}, "delete": {"operationId": "ai_ai-models_delete", "description": "API endpoint for AI models.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["ai"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this ai model.", "required": true, "type": "integer"}]}, "/ai/ai-prompt-logs/": {"get": {"operationId": "ai_ai-prompt-logs_list", "description": "API endpoint for AI prompt logs (read-only).", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/AIPromptLog"}}}}}}, "tags": ["ai"]}, "parameters": []}, "/ai/ai-prompt-logs/{id}/": {"get": {"operationId": "ai_ai-prompt-logs_read", "description": "API endpoint for AI prompt logs (read-only).", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/AIPromptLog"}}}, "tags": ["ai"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this ai prompt log.", "required": true, "type": "integer"}]}, "/ai/ai-prompts/": {"get": {"operationId": "ai_ai-prompts_list", "description": "API endpoint for AI prompts.", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/AIPrompt"}}}}}}, "tags": ["ai"]}, "post": {"operationId": "ai_ai-prompts_create", "description": "API endpoint for AI prompts.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AIPrompt"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/AIPrompt"}}}, "tags": ["ai"]}, "parameters": []}, "/ai/ai-prompts/{id}/": {"get": {"operationId": "ai_ai-prompts_read", "description": "API endpoint for AI prompts.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/AIPrompt"}}}, "tags": ["ai"]}, "put": {"operationId": "ai_ai-prompts_update", "description": "API endpoint for AI prompts.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AIPrompt"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/AIPrompt"}}}, "tags": ["ai"]}, "patch": {"operationId": "ai_ai-prompts_partial_update", "description": "API endpoint for AI prompts.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AIPrompt"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/AIPrompt"}}}, "tags": ["ai"]}, "delete": {"operationId": "ai_ai-prompts_delete", "description": "API endpoint for AI prompts.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["ai"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this ai prompt.", "required": true, "type": "integer"}]}, "/ai/ai-references/": {"get": {"operationId": "ai_ai-references_list", "description": "API endpoint for AI references.", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/AIReference"}}}}}}, "tags": ["ai"]}, "post": {"operationId": "ai_ai-references_create", "description": "API endpoint for AI references.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AIReference"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/AIReference"}}}, "tags": ["ai"]}, "parameters": []}, "/ai/ai-references/{id}/": {"get": {"operationId": "ai_ai-references_read", "description": "API endpoint for AI references.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/AIReference"}}}, "tags": ["ai"]}, "put": {"operationId": "ai_ai-references_update", "description": "API endpoint for AI references.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AIReference"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/AIReference"}}}, "tags": ["ai"]}, "patch": {"operationId": "ai_ai-references_partial_update", "description": "API endpoint for AI references.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AIReference"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/AIReference"}}}, "tags": ["ai"]}, "delete": {"operationId": "ai_ai-references_delete", "description": "API endpoint for AI references.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["ai"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this ai reference.", "required": true, "type": "integer"}]}, "/auth/analytics/comments/": {"get": {"operationId": "auth_analytics_comments_list", "summary": "Get analytics data for comments.", "description": "This endpoint returns analytics data for comments, including:\n- Number of comments (total, by status, by type, by time period)", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["auth"]}, "parameters": []}, "/auth/analytics/document-views/": {"get": {"operationId": "auth_analytics_document-views_list", "summary": "Get analytics data for document views.", "description": "This endpoint returns analytics data for document views, including:\n- Number of document views (total, by document, by time period)", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["auth"]}, "parameters": []}, "/auth/analytics/document-views/{document_version_id}/": {"get": {"operationId": "auth_analytics_document-views_read", "summary": "Get analytics data for document views.", "description": "This endpoint returns analytics data for document views, including:\n- Number of document views (total, by document, by time period)", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["auth"]}, "parameters": [{"name": "document_version_id", "in": "path", "required": true, "type": "string"}]}, "/auth/analytics/documents/": {"get": {"operationId": "auth_analytics_documents_list", "summary": "Get analytics data for documents.", "description": "This endpoint returns analytics data for documents, including:\n- Number of documents (total, by status, by time period)", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["auth"]}, "parameters": []}, "/auth/analytics/summary/": {"get": {"operationId": "auth_analytics_summary_list", "summary": "Get a summary of analytics data.", "description": "This endpoint returns a summary of analytics data, including:\n- Number of users (total, by time period)\n- Number of documents (total, by status, by time period)\n- Number of comments (total, by status, by type, by time period)", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["auth"]}, "parameters": []}, "/auth/analytics/users/": {"get": {"operationId": "auth_analytics_users_list", "summary": "Get analytics data for users.", "description": "This endpoint returns analytics data for users, including:\n- Number of users (total, by time period)", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["auth"]}, "parameters": []}, "/auth/csrf/": {"get": {"operationId": "auth_csrf_list", "description": "Get a CSRF token without authentication.", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": ""}}, "tags": ["auth"]}, "parameters": []}, "/auth/login/": {"post": {"operationId": "auth_login_create", "description": "Login with username and password to get JWT tokens.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Login"}}], "responses": {"200": {"description": "Authentication successful", "schema": {"type": "object", "properties": {"refresh": {"description": "JWT refresh token", "type": "string"}, "access": {"description": "JWT access token", "type": "string"}, "user": {"description": "User data", "type": "object"}}}}, "401": {"description": "Unauthorized"}, "400": {"description": "Bad Request"}}, "tags": ["auth"]}, "parameters": []}, "/auth/logout/": {"post": {"operationId": "auth_logout_create", "description": "Logout the current user by blacklisting their refresh token.", "parameters": [], "responses": {"200": {"description": "Logout successful", "schema": {"type": "object", "properties": {"detail": {"description": "Success message", "type": "string"}}}}, "401": {"description": "Unauthorized"}}, "tags": ["auth"]}, "parameters": []}, "/auth/orcid/callback/": {"get": {"operationId": "auth_orcid_callback_list", "description": "Handle the ORCID authentication callback after user authorization.", "parameters": [{"name": "code", "in": "query", "description": "Authorization code from ORCID", "required": true, "type": "string"}], "responses": {"200": {"description": ""}, "302": {"description": "Redirect to frontend with JWT tokens"}, "400": {"description": "Bad Request"}}, "tags": ["auth"]}, "parameters": []}, "/auth/orcid/login/": {"get": {"operationId": "auth_orcid_login_list", "description": "Get the ORCID authentication URL for user login/registration.", "parameters": [], "responses": {"200": {"description": "ORCID authentication URL", "schema": {"type": "object", "properties": {"auth_url": {"description": "URL to redirect to for ORCID authentication", "type": "string"}}}}}, "tags": ["auth"]}, "parameters": []}, "/auth/refresh/": {"post": {"operationId": "auth_refresh_create", "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TokenRefresh"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TokenRefresh"}}}, "tags": ["auth"]}, "parameters": []}, "/auth/register/": {"post": {"operationId": "auth_register_create", "description": "Register a new user with username, password, and other required fields.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Registration"}}], "responses": {"201": {"description": "Registration successful", "schema": {"type": "object", "properties": {"refresh": {"description": "JWT refresh token", "type": "string"}, "access": {"description": "JWT access token", "type": "string"}, "user": {"description": "User data", "type": "object"}}}}, "400": {"description": "Bad Request"}}, "tags": ["auth"]}, "parameters": []}, "/auth/users/": {"get": {"operationId": "auth_users_list", "description": "Return a list of all users (admin only).", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/User"}}}}}}, "tags": ["auth"]}, "post": {"operationId": "auth_users_create", "description": "Create a new user (admin only).", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/User"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/User"}}}, "tags": ["auth"]}, "parameters": []}, "/auth/users/{id}/": {"get": {"operationId": "auth_users_read", "description": "Return the given user.\nUse 'me' as the ID to get the current authenticated user.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/User"}}}, "tags": ["auth"]}, "put": {"operationId": "auth_users_update", "description": "Update the given user.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/User"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/User"}}}, "tags": ["auth"]}, "patch": {"operationId": "auth_users_partial_update", "description": "Partially update the given user.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/User"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/User"}}}, "tags": ["auth"]}, "delete": {"operationId": "auth_users_delete", "description": "Delete the given user (admin only).", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["auth"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this user.", "required": true, "type": "integer"}]}, "/comments/chat-messages/": {"get": {"operationId": "comments_chat-messages_list", "description": "API endpoint for chat messages.", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/ChatMessage"}}}}}}, "tags": ["comments"]}, "post": {"operationId": "comments_chat-messages_create", "description": "API endpoint for chat messages.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ChatMessage"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ChatMessage"}}}, "tags": ["comments"]}, "parameters": []}, "/comments/chat-messages/{id}/": {"get": {"operationId": "comments_chat-messages_read", "description": "API endpoint for chat messages.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ChatMessage"}}}, "tags": ["comments"]}, "put": {"operationId": "comments_chat-messages_update", "description": "API endpoint for chat messages.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ChatMessage"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ChatMessage"}}}, "tags": ["comments"]}, "patch": {"operationId": "comments_chat-messages_partial_update", "description": "API endpoint for chat messages.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ChatMessage"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ChatMessage"}}}, "tags": ["comments"]}, "delete": {"operationId": "comments_chat-messages_delete", "description": "API endpoint for chat messages.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["comments"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this chat message.", "required": true, "type": "integer"}]}, "/comments/comment-authors/": {"get": {"operationId": "comments_comment-authors_list", "description": "API endpoint for comment authors.", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/CommentAuthor"}}}}}}, "tags": ["comments"]}, "post": {"operationId": "comments_comment-authors_create", "description": "API endpoint for comment authors.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CommentAuthor"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/CommentAuthor"}}}, "tags": ["comments"]}, "parameters": []}, "/comments/comment-authors/{id}/": {"get": {"operationId": "comments_comment-authors_read", "description": "API endpoint for comment authors.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CommentAuthor"}}}, "tags": ["comments"]}, "put": {"operationId": "comments_comment-authors_update", "description": "API endpoint for comment authors.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CommentAuthor"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CommentAuthor"}}}, "tags": ["comments"]}, "patch": {"operationId": "comments_comment-authors_partial_update", "description": "API endpoint for comment authors.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CommentAuthor"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CommentAuthor"}}}, "tags": ["comments"]}, "delete": {"operationId": "comments_comment-authors_delete", "description": "API endpoint for comment authors.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["comments"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this comment author.", "required": true, "type": "integer"}]}, "/comments/comment-chats/": {"get": {"operationId": "comments_comment-chats_list", "description": "API endpoint for comment chats.", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/CommentChat"}}}}}}, "tags": ["comments"]}, "post": {"operationId": "comments_comment-chats_create", "description": "API endpoint for comment chats.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CommentChat"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/CommentChat"}}}, "tags": ["comments"]}, "parameters": []}, "/comments/comment-chats/{id}/": {"get": {"operationId": "comments_comment-chats_read", "description": "API endpoint for comment chats.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CommentChat"}}}, "tags": ["comments"]}, "put": {"operationId": "comments_comment-chats_update", "description": "API endpoint for comment chats.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CommentChat"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CommentChat"}}}, "tags": ["comments"]}, "patch": {"operationId": "comments_comment-chats_partial_update", "description": "API endpoint for comment chats.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CommentChat"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CommentChat"}}}, "tags": ["comments"]}, "delete": {"operationId": "comments_comment-chats_delete", "description": "API endpoint for comment chats.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["comments"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this comment chat.", "required": true, "type": "integer"}]}, "/comments/comment-chats/{id}/add_message/": {"post": {"operationId": "comments_comment-chats_add_message", "description": "Add a message to a comment chat.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CommentChat"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/CommentChat"}}}, "tags": ["comments"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this comment chat.", "required": true, "type": "integer"}]}, "/comments/comment-moderations/": {"get": {"operationId": "comments_comment-moderations_list", "description": "API endpoint for comment moderation.", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/CommentModeration"}}}}}}, "tags": ["comments"]}, "post": {"operationId": "comments_comment-moderations_create", "description": "API endpoint for comment moderation.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CommentModeration"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/CommentModeration"}}}, "tags": ["comments"]}, "parameters": []}, "/comments/comment-moderations/moderate_comment/": {"post": {"operationId": "comments_comment-moderations_moderate_comment", "description": "Moderate a comment.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CommentModeration"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/CommentModeration"}}}, "tags": ["comments"]}, "parameters": []}, "/comments/comment-moderations/pending_comments/": {"get": {"operationId": "comments_comment-moderations_pending_comments", "description": "Get comments pending moderation.", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/CommentModeration"}}}}}}, "tags": ["comments"]}, "parameters": []}, "/comments/comment-moderations/{id}/": {"get": {"operationId": "comments_comment-moderations_read", "description": "API endpoint for comment moderation.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CommentModeration"}}}, "tags": ["comments"]}, "put": {"operationId": "comments_comment-moderations_update", "description": "API endpoint for comment moderation.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CommentModeration"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CommentModeration"}}}, "tags": ["comments"]}, "patch": {"operationId": "comments_comment-moderations_partial_update", "description": "API endpoint for comment moderation.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CommentModeration"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CommentModeration"}}}, "tags": ["comments"]}, "delete": {"operationId": "comments_comment-moderations_delete", "description": "API endpoint for comment moderation.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["comments"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this comment moderation.", "required": true, "type": "integer"}]}, "/comments/comment-references/": {"get": {"operationId": "comments_comment-references_list", "description": "API endpoint for comment references.", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/CommentReference"}}}}}}, "tags": ["comments"]}, "post": {"operationId": "comments_comment-references_create", "description": "API endpoint for comment references.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CommentReference"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/CommentReference"}}}, "tags": ["comments"]}, "parameters": []}, "/comments/comment-references/{id}/": {"get": {"operationId": "comments_comment-references_read", "description": "API endpoint for comment references.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CommentReference"}}}, "tags": ["comments"]}, "put": {"operationId": "comments_comment-references_update", "description": "API endpoint for comment references.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CommentReference"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CommentReference"}}}, "tags": ["comments"]}, "patch": {"operationId": "comments_comment-references_partial_update", "description": "API endpoint for comment references.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CommentReference"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CommentReference"}}}, "tags": ["comments"]}, "delete": {"operationId": "comments_comment-references_delete", "description": "API endpoint for comment references.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["comments"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this comment reference.", "required": true, "type": "integer"}]}, "/comments/comment-types/": {"get": {"operationId": "comments_comment-types_list", "description": "API endpoint for comment types.", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/CommentType"}}}}}}, "tags": ["comments"]}, "post": {"operationId": "comments_comment-types_create", "description": "API endpoint for comment types.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CommentType"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/CommentType"}}}, "tags": ["comments"]}, "parameters": []}, "/comments/comment-types/{id}/": {"get": {"operationId": "comments_comment-types_read", "description": "API endpoint for comment types.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CommentType"}}}, "tags": ["comments"]}, "put": {"operationId": "comments_comment-types_update", "description": "API endpoint for comment types.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CommentType"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CommentType"}}}, "tags": ["comments"]}, "patch": {"operationId": "comments_comment-types_partial_update", "description": "API endpoint for comment types.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CommentType"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CommentType"}}}, "tags": ["comments"]}, "delete": {"operationId": "comments_comment-types_delete", "description": "API endpoint for comment types.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["comments"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this comment type.", "required": true, "type": "integer"}]}, "/comments/comments/": {"get": {"operationId": "comments_comments_list", "description": "API endpoint for comments.", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/CommentList"}}}}}}, "tags": ["comments"]}, "post": {"operationId": "comments_comments_create", "description": "API endpoint for comments.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Comment"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Comment"}}}, "tags": ["comments"]}, "parameters": []}, "/comments/comments/{id}/": {"get": {"operationId": "comments_comments_read", "description": "API endpoint for comments.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Comment"}}}, "tags": ["comments"]}, "put": {"operationId": "comments_comments_update", "description": "API endpoint for comments.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Comment"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Comment"}}}, "tags": ["comments"]}, "patch": {"operationId": "comments_comments_partial_update", "description": "API endpoint for comments.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Comment"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Comment"}}}, "tags": ["comments"]}, "delete": {"operationId": "comments_comments_delete", "description": "API endpoint for comments.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["comments"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this comment.", "required": true, "type": "integer"}]}, "/comments/comments/{id}/create_chat/": {"post": {"operationId": "comments_comments_create_chat", "description": "Create a chat for a comment.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Comment"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Comment"}}}, "tags": ["comments"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this comment.", "required": true, "type": "integer"}]}, "/comments/comments/{id}/submit/": {"post": {"operationId": "comments_comments_submit", "description": "Submit a comment for moderation.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Comment"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Comment"}}}, "tags": ["comments"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this comment.", "required": true, "type": "integer"}]}, "/comments/conflicts-of-interest/": {"get": {"operationId": "comments_conflicts-of-interest_list", "description": "API endpoint for conflicts of interest.", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/ConflictOfInterest"}}}}}}, "tags": ["comments"]}, "post": {"operationId": "comments_conflicts-of-interest_create", "description": "API endpoint for conflicts of interest.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ConflictOfInterest"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ConflictOfInterest"}}}, "tags": ["comments"]}, "parameters": []}, "/comments/conflicts-of-interest/{id}/": {"get": {"operationId": "comments_conflicts-of-interest_read", "description": "API endpoint for conflicts of interest.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ConflictOfInterest"}}}, "tags": ["comments"]}, "put": {"operationId": "comments_conflicts-of-interest_update", "description": "API endpoint for conflicts of interest.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ConflictOfInterest"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ConflictOfInterest"}}}, "tags": ["comments"]}, "patch": {"operationId": "comments_conflicts-of-interest_partial_update", "description": "API endpoint for conflicts of interest.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ConflictOfInterest"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ConflictOfInterest"}}}, "tags": ["comments"]}, "delete": {"operationId": "comments_conflicts-of-interest_delete", "description": "API endpoint for conflicts of interest.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["comments"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this conflict of interest.", "required": true, "type": "integer"}]}, "/publications/attachments/": {"get": {"operationId": "publications_attachments_list", "description": "API endpoint for attachments.", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Attachment"}}}}}}, "tags": ["publications"]}, "post": {"operationId": "publications_attachments_create", "description": "API endpoint for attachments.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Attachment"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Attachment"}}}, "tags": ["publications"]}, "parameters": []}, "/publications/attachments/{id}/": {"get": {"operationId": "publications_attachments_read", "description": "API endpoint for attachments.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Attachment"}}}, "tags": ["publications"]}, "put": {"operationId": "publications_attachments_update", "description": "API endpoint for attachments.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Attachment"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Attachment"}}}, "tags": ["publications"]}, "patch": {"operationId": "publications_attachments_partial_update", "description": "API endpoint for attachments.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Attachment"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Attachment"}}}, "tags": ["publications"]}, "delete": {"operationId": "publications_attachments_delete", "description": "API endpoint for attachments.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["publications"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this attachment.", "required": true, "type": "integer"}]}, "/publications/authors/": {"get": {"operationId": "publications_authors_list", "description": "API endpoint for authors.", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Author"}}}}}}, "tags": ["publications"]}, "post": {"operationId": "publications_authors_create", "description": "API endpoint for authors.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Author"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Author"}}}, "tags": ["publications"]}, "parameters": []}, "/publications/authors/{id}/": {"get": {"operationId": "publications_authors_read", "description": "API endpoint for authors.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Author"}}}, "tags": ["publications"]}, "put": {"operationId": "publications_authors_update", "description": "API endpoint for authors.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Author"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Author"}}}, "tags": ["publications"]}, "patch": {"operationId": "publications_authors_partial_update", "description": "API endpoint for authors.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Author"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Author"}}}, "tags": ["publications"]}, "delete": {"operationId": "publications_authors_delete", "description": "API endpoint for authors.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["publications"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this author.", "required": true, "type": "integer"}]}, "/publications/citation/formats/": {"get": {"operationId": "publications_citation_formats_list", "summary": "Get a list of available citation formats.", "description": "This endpoint returns a list of available citation formats.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["publications"]}, "parameters": []}, "/publications/citation/styles/": {"get": {"operationId": "publications_citation_styles_list", "summary": "Get a list of available citation styles.", "description": "This endpoint returns a list of available citation styles.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["publications"]}, "parameters": []}, "/publications/document-versions/": {"get": {"operationId": "publications_document-versions_list", "description": "API endpoint for document versions.", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/DocumentVersionList"}}}}}}, "tags": ["publications"]}, "post": {"operationId": "publications_document-versions_create", "description": "API endpoint for document versions.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DocumentVersion"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/DocumentVersion"}}}, "tags": ["publications"]}, "parameters": []}, "/publications/document-versions/{document_version_id}/archive/": {"post": {"operationId": "publications_document-versions_archive_create", "summary": "Archive a document version in Reposis.", "description": "This endpoint archives a document version in Reposis.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["publications"]}, "parameters": [{"name": "document_version_id", "in": "path", "required": true, "type": "string"}]}, "/publications/document-versions/{document_version_id}/citation/": {"get": {"operationId": "publications_document-versions_citation_list", "summary": "Get a citation for a document version.", "description": "This endpoint returns a citation for a document version in the specified format and style.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["publications"]}, "parameters": [{"name": "document_version_id", "in": "path", "required": true, "type": "string"}]}, "/publications/document-versions/{document_version_id}/import/": {"post": {"operationId": "publications_document-versions_import_create", "summary": "Import a document file (Word, LaTeX, PDF) and convert it to JATS-XML.", "description": "This endpoint imports a document file, extracts its content and metadata,\nand converts it to JATS-XML format. If a document_version_id is provided,\nthe document version will be updated with the extracted content.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["publications"]}, "parameters": [{"name": "document_version_id", "in": "path", "required": true, "type": "string"}]}, "/publications/document-versions/{document_version_id}/jats/": {"get": {"operationId": "publications_document-versions_jats_list", "summary": "Export a document version to JATS-XML format.", "description": "This endpoint exports a document version to JATS-XML format for submission to repositories.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["publications"]}, "parameters": [{"name": "document_version_id", "in": "path", "required": true, "type": "string"}]}, "/publications/document-versions/{document_version_id}/pdf/": {"get": {"operationId": "publications_document-versions_pdf_list", "summary": "Download a PDF/A document for a document version.", "description": "This endpoint creates a PDF/A document from a document version\nand returns it as a downloadable file.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["publications"]}, "parameters": [{"name": "document_version_id", "in": "path", "required": true, "type": "string"}]}, "/publications/document-versions/{document_version_id}/repository/": {"get": {"operationId": "publications_document-versions_repository_list", "summary": "Export a document version to a repository.", "description": "This endpoint exports a document version to a specified repository (PubMed Central, Europe PMC, etc.)\nusing JATS-XML format.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["publications"]}, "parameters": [{"name": "document_version_id", "in": "path", "required": true, "type": "string"}]}, "/publications/document-versions/{id}/": {"get": {"operationId": "publications_document-versions_read", "description": "Retrieve a document version.\nIf the document version doesn't exist and the user has appropriate permissions\n(author, creator, or editorial office), create a new document version.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/DocumentVersion"}}}, "tags": ["publications"]}, "put": {"operationId": "publications_document-versions_update", "description": "Update a document version.\nIf the document version doesn't exist and the user has appropriate permissions\n(author, creator, or editorial office), create a new document version and update it.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DocumentVersion"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/DocumentVersion"}}}, "tags": ["publications"]}, "patch": {"operationId": "publications_document-versions_partial_update", "description": "Partially update a document version.\nIf the document version doesn't exist and the user has appropriate permissions\n(author, creator, or editorial office), create a new document version and update it.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DocumentVersion"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/DocumentVersion"}}}, "tags": ["publications"]}, "delete": {"operationId": "publications_document-versions_delete", "description": "API endpoint for document versions.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["publications"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this document version.", "required": true, "type": "integer"}]}, "/publications/document-versions/{id}/close_discussion/": {"post": {"operationId": "publications_document-versions_close_discussion", "summary": "Close the discussion phase for a document version.", "description": "This endpoint allows moderators to manually close the discussion phase for a document version.\nOnly editorial board members or staff can close discussions.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DocumentVersion"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/DocumentVersion"}}}, "tags": ["publications"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this document version.", "required": true, "type": "integer"}]}, "/publications/document-versions/{id}/generate_keywords/": {"post": {"operationId": "publications_document-versions_generate_keywords", "description": "Generate AI keywords for a document version.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DocumentVersion"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/DocumentVersion"}}}, "tags": ["publications"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this document version.", "required": true, "type": "integer"}]}, "/publications/document-versions/{id}/publish/": {"post": {"operationId": "publications_document-versions_publish", "summary": "Publish a document version.", "description": "When a new version is published, discussions on previous versions are automatically closed.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DocumentVersion"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/DocumentVersion"}}}, "tags": ["publications"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this document version.", "required": true, "type": "integer"}]}, "/publications/document-versions/{id}/submit_for_review/": {"post": {"operationId": "publications_document-versions_submit_for_review", "description": "Submit a document version for review.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DocumentVersion"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/DocumentVersion"}}}, "tags": ["publications"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this document version.", "required": true, "type": "integer"}]}, "/publications/document-versions/{id}/withdraw/": {"post": {"operationId": "publications_document-versions_withdraw", "summary": "Withdraw a document version.", "description": "This endpoint allows authors to withdraw their publication, which also closes the discussion phase.\nOnly authors or editorial board members can withdraw publications.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DocumentVersion"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/DocumentVersion"}}}, "tags": ["publications"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this document version.", "required": true, "type": "integer"}]}, "/publications/figures/": {"get": {"operationId": "publications_figures_list", "description": "API endpoint for figures.", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Figure"}}}}}}, "tags": ["publications"]}, "post": {"operationId": "publications_figures_create", "description": "API endpoint for figures.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Figure"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Figure"}}}, "tags": ["publications"]}, "parameters": []}, "/publications/figures/{id}/": {"get": {"operationId": "publications_figures_read", "description": "API endpoint for figures.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Figure"}}}, "tags": ["publications"]}, "put": {"operationId": "publications_figures_update", "description": "API endpoint for figures.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Figure"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Figure"}}}, "tags": ["publications"]}, "patch": {"operationId": "publications_figures_partial_update", "description": "API endpoint for figures.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Figure"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Figure"}}}, "tags": ["publications"]}, "delete": {"operationId": "publications_figures_delete", "description": "API endpoint for figures.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["publications"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this figure.", "required": true, "type": "integer"}]}, "/publications/import-document/": {"post": {"operationId": "publications_import-document_create", "summary": "Import a document file (Word, LaTeX, PDF) and convert it to JATS-XML.", "description": "This endpoint imports a document file, extracts its content and metadata,\nand converts it to JATS-XML format. If a document_version_id is provided,\nthe document version will be updated with the extracted content.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["publications"]}, "parameters": []}, "/publications/keywords/": {"get": {"operationId": "publications_keywords_list", "description": "API endpoint for keywords.", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Keyword"}}}}}}, "tags": ["publications"]}, "post": {"operationId": "publications_keywords_create", "description": "API endpoint for keywords.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Keyword"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Keyword"}}}, "tags": ["publications"]}, "parameters": []}, "/publications/keywords/{id}/": {"get": {"operationId": "publications_keywords_read", "description": "API endpoint for keywords.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Keyword"}}}, "tags": ["publications"]}, "put": {"operationId": "publications_keywords_update", "description": "API endpoint for keywords.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Keyword"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Keyword"}}}, "tags": ["publications"]}, "patch": {"operationId": "publications_keywords_partial_update", "description": "API endpoint for keywords.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Keyword"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Keyword"}}}, "tags": ["publications"]}, "delete": {"operationId": "publications_keywords_delete", "description": "API endpoint for keywords.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["publications"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this keyword.", "required": true, "type": "integer"}]}, "/publications/ojs/import/{submission_id}/": {"post": {"operationId": "publications_ojs_import_create", "summary": "Import a submission from OJS.", "description": "This endpoint imports a submission from the configured OJS instance\nand creates a publication in the system.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["publications"]}, "parameters": [{"name": "submission_id", "in": "path", "required": true, "type": "string"}]}, "/publications/ojs/issues/": {"get": {"operationId": "publications_ojs_issues_list", "summary": "Get a list of issues for a journal from OJS.", "description": "This endpoint returns a list of issues for a journal from the configured OJS instance.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["publications"]}, "parameters": []}, "/publications/ojs/issues/{journal_id}/": {"get": {"operationId": "publications_ojs_issues_read", "summary": "Get a list of issues for a journal from OJS.", "description": "This endpoint returns a list of issues for a journal from the configured OJS instance.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["publications"]}, "parameters": [{"name": "journal_id", "in": "path", "required": true, "type": "string"}]}, "/publications/ojs/journals/": {"get": {"operationId": "publications_ojs_journals_list", "summary": "Get a list of journals from OJS.", "description": "This endpoint returns a list of journals from the configured OJS instance.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["publications"]}, "parameters": []}, "/publications/ojs/submission/{submission_id}/": {"get": {"operationId": "publications_ojs_submission_read", "summary": "Get a submission from OJS.", "description": "This endpoint returns a submission from the configured OJS instance.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["publications"]}, "parameters": [{"name": "submission_id", "in": "path", "required": true, "type": "string"}]}, "/publications/ojs/submissions/": {"get": {"operationId": "publications_ojs_submissions_list", "summary": "Get a list of submissions for a journal from OJS.", "description": "This endpoint returns a list of submissions for a journal from the configured OJS instance.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["publications"]}, "parameters": []}, "/publications/ojs/submissions/{journal_id}/": {"get": {"operationId": "publications_ojs_submissions_read", "summary": "Get a list of submissions for a journal from OJS.", "description": "This endpoint returns a list of submissions for a journal from the configured OJS instance.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["publications"]}, "parameters": [{"name": "journal_id", "in": "path", "required": true, "type": "string"}]}, "/publications/public/comments/": {"get": {"operationId": "publications_public_comments_list", "summary": "Get a list of public comments.", "description": "This endpoint returns a list of published comments for public consumption.\nComments are only returned for document versions with open discussions.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["publications"]}, "parameters": []}, "/publications/public/comments/{document_version_id}/": {"get": {"operationId": "publications_public_comments_read", "summary": "Get a list of public comments.", "description": "This endpoint returns a list of published comments for public consumption.\nComments are only returned for document versions with open discussions.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["publications"]}, "parameters": [{"name": "document_version_id", "in": "path", "required": true, "type": "string"}]}, "/publications/public/document-versions/{document_version_id}/": {"get": {"operationId": "publications_public_document-versions_read", "summary": "Get a public document version.", "description": "This endpoint returns a published document version for public consumption.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["publications"]}, "parameters": [{"name": "document_version_id", "in": "path", "required": true, "type": "string"}]}, "/publications/public/publications/": {"get": {"operationId": "publications_public_publications_list", "summary": "Get a list of public publications.", "description": "This endpoint returns a list of published publications for public consumption.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["publications"]}, "parameters": []}, "/publications/publications/": {"get": {"operationId": "publications_publications_list", "description": "Return a list of all publications.", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/PublicationList"}}}}}}, "tags": ["publications"]}, "post": {"operationId": "publications_publications_create", "description": "Create a new publication.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Publication"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Publication"}}}, "tags": ["publications"]}, "parameters": []}, "/publications/publications/{id}/": {"get": {"operationId": "publications_publications_read", "description": "Return the given publication.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Publication"}}}, "tags": ["publications"]}, "put": {"operationId": "publications_publications_update", "description": "Update the given publication.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Publication"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Publication"}}}, "tags": ["publications"]}, "patch": {"operationId": "publications_publications_partial_update", "description": "Partially update the given publication.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Publication"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Publication"}}}, "tags": ["publications"]}, "delete": {"operationId": "publications_publications_delete", "description": "Delete the given publication.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["publications"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this publication.", "required": true, "type": "integer"}]}, "/publications/publications/{id}/current_version/": {"get": {"operationId": "publications_publications_current_version", "summary": "Get the current version of a publication.", "description": "If the user is an author of any version of the publication, is the editorial board member,\nis a staff/superuser, or is the creator of any version, they can see the latest version regardless of status.\nOtherwise, only the latest published version is returned.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Publication"}}}, "tags": ["publications"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this publication.", "required": true, "type": "integer"}]}, "/publications/publications/{id}/versions/": {"get": {"operationId": "publications_publications_versions", "description": "Get all versions of a publication.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Publication"}}}, "tags": ["publications"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this publication.", "required": true, "type": "integer"}]}, "/publications/review-processes/": {"get": {"operationId": "publications_review-processes_list", "description": "API endpoint for review processes.", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/ReviewProcess"}}}}}}, "tags": ["publications"]}, "post": {"operationId": "publications_review-processes_create", "description": "API endpoint for review processes.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ReviewProcess"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ReviewProcess"}}}, "tags": ["publications"]}, "parameters": []}, "/publications/review-processes/{id}/": {"get": {"operationId": "publications_review-processes_read", "description": "API endpoint for review processes.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ReviewProcess"}}}, "tags": ["publications"]}, "put": {"operationId": "publications_review-processes_update", "description": "API endpoint for review processes.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ReviewProcess"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ReviewProcess"}}}, "tags": ["publications"]}, "patch": {"operationId": "publications_review-processes_partial_update", "description": "API endpoint for review processes.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ReviewProcess"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ReviewProcess"}}}, "tags": ["publications"]}, "delete": {"operationId": "publications_review-processes_delete", "description": "API endpoint for review processes.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["publications"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this review process.", "required": true, "type": "integer"}]}, "/publications/review-processes/{id}/complete_review/": {"post": {"operationId": "publications_review-processes_complete_review", "description": "Complete a review process.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ReviewProcess"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ReviewProcess"}}}, "tags": ["publications"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this review process.", "required": true, "type": "integer"}]}, "/publications/reviewers/": {"get": {"operationId": "publications_reviewers_list", "description": "API endpoint for reviewers.", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Reviewer"}}}}}}, "tags": ["publications"]}, "post": {"operationId": "publications_reviewers_create", "description": "API endpoint for reviewers.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Reviewer"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Reviewer"}}}, "tags": ["publications"]}, "parameters": []}, "/publications/reviewers/{id}/": {"get": {"operationId": "publications_reviewers_read", "description": "API endpoint for reviewers.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Reviewer"}}}, "tags": ["publications"]}, "put": {"operationId": "publications_reviewers_update", "description": "API endpoint for reviewers.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Reviewer"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Reviewer"}}}, "tags": ["publications"]}, "patch": {"operationId": "publications_reviewers_partial_update", "description": "API endpoint for reviewers.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Reviewer"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Reviewer"}}}, "tags": ["publications"]}, "delete": {"operationId": "publications_reviewers_delete", "description": "API endpoint for reviewers.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["publications"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this reviewer.", "required": true, "type": "integer"}]}, "/publications/reviewers/{id}/accept_invitation/": {"post": {"operationId": "publications_reviewers_accept_invitation", "description": "Accept a review invitation.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Reviewer"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Reviewer"}}}, "tags": ["publications"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this reviewer.", "required": true, "type": "integer"}]}, "/publications/reviewers/{id}/complete_review/": {"post": {"operationId": "publications_reviewers_complete_review", "description": "Mark a review as completed.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Reviewer"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Reviewer"}}}, "tags": ["publications"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this reviewer.", "required": true, "type": "integer"}]}, "/publications/reviewers/{id}/decline_invitation/": {"post": {"operationId": "publications_reviewers_decline_invitation", "description": "Decline a review invitation.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Reviewer"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Reviewer"}}}, "tags": ["publications"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this reviewer.", "required": true, "type": "integer"}]}, "/publications/tables/": {"get": {"operationId": "publications_tables_list", "description": "API endpoint for tables.", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Table"}}}}}}, "tags": ["publications"]}, "post": {"operationId": "publications_tables_create", "description": "API endpoint for tables.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Table"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Table"}}}, "tags": ["publications"]}, "parameters": []}, "/publications/tables/{id}/": {"get": {"operationId": "publications_tables_read", "description": "API endpoint for tables.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Table"}}}, "tags": ["publications"]}, "put": {"operationId": "publications_tables_update", "description": "API endpoint for tables.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Table"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Table"}}}, "tags": ["publications"]}, "patch": {"operationId": "publications_tables_partial_update", "description": "API endpoint for tables.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Table"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Table"}}}, "tags": ["publications"]}, "delete": {"operationId": "publications_tables_delete", "description": "API endpoint for tables.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["publications"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this table.", "required": true, "type": "integer"}]}}, "definitions": {"AICommentSuggestionList": {"required": ["document_version", "content"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "document_version": {"title": "Document version", "type": "integer"}, "ai_model_name": {"title": "Ai model name", "type": "string", "readOnly": true}, "content": {"title": "Content", "type": "string", "minLength": 1}, "status": {"title": "Status", "type": "string", "enum": ["pending", "approved", "rejected", "modified"]}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "confidence_score": {"title": "Confidence score", "type": "number"}, "document_title": {"title": "Document title", "type": "string", "readOnly": true}, "reference_count": {"title": "Reference count", "type": "string", "readOnly": true}}}, "AIReference": {"required": ["suggestion", "title", "authors", "citation_text", "trust_level"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "suggestion": {"title": "Suggestion", "type": "integer"}, "title": {"title": "Title", "type": "string", "maxLength": 500, "minLength": 1}, "authors": {"title": "Authors", "type": "string", "maxLength": 500, "minLength": 1}, "publication_date": {"title": "Publication date", "type": "string", "format": "date", "x-nullable": true}, "doi": {"title": "Doi", "type": "string", "maxLength": 200, "x-nullable": true}, "url": {"title": "Url", "type": "string", "format": "uri", "maxLength": 200, "x-nullable": true}, "citation_text": {"title": "Citation text", "type": "string", "minLength": 1}, "trust_level": {"title": "Trust level", "type": "string", "enum": ["high", "medium", "low"]}}}, "AIFeedback": {"required": ["suggestion", "rating"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "suggestion": {"title": "Suggestion", "type": "integer"}, "user": {"title": "User", "type": "integer", "readOnly": true}, "rating": {"title": "Rating", "type": "integer", "maximum": 32767, "minimum": 0}, "feedback_text": {"title": "Feedback text", "type": "string", "x-nullable": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "user_details": {"title": "User details", "type": "string", "readOnly": true}}}, "AICommentSuggestion": {"required": ["document_version", "ai_model", "ai_prompt", "content"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "document_version": {"title": "Document version", "type": "integer"}, "ai_model": {"title": "Ai model", "type": "integer"}, "ai_prompt": {"title": "Ai prompt", "type": "integer"}, "content": {"title": "Content", "type": "string", "minLength": 1}, "section_reference": {"title": "Section reference", "type": "string", "maxLength": 100, "x-nullable": true}, "line_start": {"title": "Line start", "type": "integer", "maximum": 2147483647, "minimum": 0, "x-nullable": true}, "line_end": {"title": "Line end", "type": "integer", "maximum": 2147483647, "minimum": 0, "x-nullable": true}, "status": {"title": "Status", "type": "string", "enum": ["pending", "approved", "rejected", "modified"]}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "reviewed_at": {"title": "Reviewed at", "type": "string", "format": "date-time", "readOnly": true, "x-nullable": true}, "reviewed_by": {"title": "Reviewed by", "type": "integer", "x-nullable": true}, "comment": {"title": "Comment", "type": "integer", "x-nullable": true}, "confidence_score": {"title": "Confidence score", "type": "number"}, "ai_model_details": {"title": "Ai model details", "type": "string", "readOnly": true}, "ai_prompt_details": {"title": "Ai prompt details", "type": "string", "readOnly": true}, "document_version_details": {"title": "Document version details", "type": "string", "readOnly": true}, "reviewed_by_details": {"title": "Reviewed by details", "type": "string", "readOnly": true}, "comment_details": {"title": "Comment details", "type": "string", "readOnly": true}, "references": {"type": "array", "items": {"$ref": "#/definitions/AIReference"}, "readOnly": true}, "feedback": {"type": "array", "items": {"$ref": "#/definitions/AIFeedback"}, "readOnly": true}}}, "AIModel": {"required": ["name", "version", "provider", "api_endpoint"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 100, "minLength": 1}, "version": {"title": "Version", "type": "string", "maxLength": 50, "minLength": 1}, "provider": {"title": "Provider", "type": "string", "maxLength": 100, "minLength": 1}, "api_endpoint": {"title": "Api endpoint", "type": "string", "format": "uri", "maxLength": 200, "minLength": 1}, "is_active": {"title": "Is active", "type": "boolean"}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}}}, "AIPromptLog": {"required": ["ai_model", "ai_prompt", "user", "input_context", "output_text", "execution_time", "token_count"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "ai_model": {"title": "Ai model", "type": "integer"}, "ai_prompt": {"title": "Ai prompt", "type": "integer"}, "user": {"title": "User", "type": "integer"}, "input_context": {"title": "Input context", "type": "string", "minLength": 1}, "output_text": {"title": "Output text", "type": "string", "minLength": 1}, "execution_time": {"title": "Execution time", "type": "number"}, "token_count": {"title": "Token count", "type": "integer", "maximum": 2147483647, "minimum": 0}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "ai_model_details": {"title": "Ai model details", "type": "string", "readOnly": true}, "ai_prompt_details": {"title": "Ai prompt details", "type": "string", "readOnly": true}, "user_details": {"title": "User details", "type": "string", "readOnly": true}}}, "AIPrompt": {"required": ["name", "description", "prompt_template", "ai_model"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 100, "minLength": 1}, "description": {"title": "Description", "type": "string", "minLength": 1}, "prompt_template": {"title": "Prompt template", "type": "string", "minLength": 1}, "ai_model": {"title": "Ai model", "type": "integer"}, "is_active": {"title": "Is active", "type": "boolean"}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "created_by": {"title": "Created by", "type": "integer", "x-nullable": true}, "ai_model_details": {"title": "Ai model details", "type": "string", "readOnly": true}, "created_by_details": {"title": "Created by details", "type": "string", "readOnly": true}}}, "Login": {"required": ["username", "password"], "type": "object", "properties": {"username": {"title": "Username", "type": "string", "minLength": 1}, "password": {"title": "Password", "type": "string", "minLength": 1}}}, "TokenRefresh": {"required": ["refresh"], "type": "object", "properties": {"refresh": {"title": "Refresh", "type": "string", "minLength": 1}, "access": {"title": "Access", "type": "string", "readOnly": true, "minLength": 1}}}, "Registration": {"required": ["username", "password", "password2", "email", "first_name", "last_name", "dsgvo_consent"], "type": "object", "properties": {"username": {"title": "Username", "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.", "type": "string", "pattern": "^[\\w.@+-]+$", "maxLength": 150, "minLength": 1}, "password": {"title": "Password", "type": "string", "minLength": 1}, "password2": {"title": "Password2", "type": "string", "minLength": 1}, "email": {"title": "Email address", "type": "string", "format": "email", "maxLength": 254}, "first_name": {"title": "First name", "type": "string", "maxLength": 150}, "last_name": {"title": "Last name", "type": "string", "maxLength": 150}, "affiliation": {"title": "Affiliation", "type": "string", "maxLength": 255, "x-nullable": true}, "research_field": {"title": "Research field", "type": "string", "maxLength": 255, "x-nullable": true}, "qualification": {"title": "Qualification", "type": "string", "maxLength": 255, "x-nullable": true}, "dsgvo_consent": {"title": "Dsgvo consent", "type": "boolean"}}}, "User": {"required": ["username"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "username": {"title": "Username", "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.", "type": "string", "pattern": "^[\\w.@+-]+$", "maxLength": 150, "minLength": 1}, "email": {"title": "Email address", "type": "string", "format": "email", "maxLength": 254}, "first_name": {"title": "First name", "type": "string", "maxLength": 150}, "last_name": {"title": "Last name", "type": "string", "maxLength": 150}, "orcid": {"title": "Orcid", "type": "string", "maxLength": 50, "x-nullable": true}, "affiliation": {"title": "Affiliation", "type": "string", "maxLength": 255, "x-nullable": true}, "research_field": {"title": "Research field", "type": "string", "maxLength": 255, "x-nullable": true}, "qualification": {"title": "Qualification", "type": "string", "maxLength": 255, "x-nullable": true}}}, "ChatMessage": {"required": ["chat", "user", "content"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "chat": {"title": "Chat", "type": "integer"}, "user": {"title": "User", "type": "integer"}, "content": {"title": "Content", "type": "string", "minLength": 1}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "user_details": {"title": "User details", "type": "string", "readOnly": true}}}, "CommentAuthor": {"required": ["comment", "user"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "comment": {"title": "Comment", "type": "integer"}, "user": {"title": "User", "type": "integer"}, "is_corresponding": {"title": "Is corresponding", "type": "boolean"}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "user_details": {"title": "User details", "type": "string", "readOnly": true}}}, "CommentChat": {"required": ["comment"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "comment": {"title": "Comment", "type": "integer"}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "messages": {"type": "array", "items": {"$ref": "#/definitions/ChatMessage"}, "readOnly": true}, "comment_details": {"title": "Comment details", "type": "string", "readOnly": true}}}, "CommentModeration": {"required": ["comment", "moderator", "decision"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "comment": {"title": "Comment", "type": "integer"}, "moderator": {"title": "Moderator", "type": "integer"}, "moderation_date": {"title": "Moderation date", "type": "string", "format": "date-time", "readOnly": true}, "decision": {"title": "Decision", "type": "string", "enum": ["approved", "rejected", "needs_revision"]}, "decision_reason": {"title": "Decision reason", "type": "string", "x-nullable": true}, "moderator_details": {"title": "Moderator details", "type": "string", "readOnly": true}}}, "CommentReference": {"required": ["comment", "title", "authors", "citation_text", "trust_level"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "comment": {"title": "Comment", "type": "integer"}, "title": {"title": "Title", "type": "string", "maxLength": 500, "minLength": 1}, "authors": {"title": "Authors", "type": "string", "maxLength": 500, "minLength": 1}, "publication_date": {"title": "Publication date", "type": "string", "format": "date", "x-nullable": true}, "doi": {"title": "Doi", "type": "string", "maxLength": 200, "x-nullable": true}, "url": {"title": "Url", "type": "string", "format": "uri", "maxLength": 200, "x-nullable": true}, "citation_text": {"title": "Citation text", "type": "string", "minLength": 1}, "trust_level": {"title": "Trust level", "type": "string", "enum": ["high", "medium", "low"]}}}, "CommentType": {"required": ["code", "name", "description"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "code": {"title": "Code", "type": "string", "enum": ["SC", "rSC", "ER", "AD", "NP"]}, "name": {"title": "Name", "type": "string", "maxLength": 100, "minLength": 1}, "description": {"title": "Description", "type": "string", "minLength": 1}, "requires_doi": {"title": "Requires doi", "type": "boolean"}}}, "CommentList": {"required": ["document_version", "content"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "document_version": {"title": "Document version", "type": "integer"}, "comment_type_code": {"title": "Comment type code", "type": "string", "readOnly": true}, "content": {"title": "Content", "type": "string", "minLength": 1}, "doi": {"title": "Doi", "type": "string", "readOnly": true, "minLength": 1, "x-nullable": true}, "status": {"title": "Status", "type": "string", "enum": ["draft", "submitted", "under_review", "accepted", "rejected", "published"]}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "is_ai_generated": {"title": "Is ai generated", "type": "boolean"}, "author_count": {"title": "Author count", "type": "string", "readOnly": true}, "authors": {"title": "Authors", "type": "string", "readOnly": true}, "referenced_text": {"title": "Referenced text", "type": "string", "x-nullable": true}, "section_reference": {"title": "Section reference", "type": "string", "maxLength": 100, "x-nullable": true}, "line_start": {"title": "Line start", "type": "integer", "maximum": 2147483647, "minimum": 0, "x-nullable": true}, "line_end": {"title": "Line end", "type": "integer", "maximum": 2147483647, "minimum": 0, "x-nullable": true}}}, "ConflictOfInterest": {"required": ["comment"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "comment": {"title": "Comment", "type": "integer"}, "statement": {"title": "Statement", "type": "string", "minLength": 1}, "has_conflict": {"title": "Has conflict", "type": "boolean"}}}, "Comment": {"required": ["document_version", "comment_type", "content"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "document_version": {"title": "Document version", "type": "integer"}, "parent_comment": {"title": "Parent comment", "type": "integer", "x-nullable": true}, "comment_type": {"title": "Comment type", "type": "integer"}, "content": {"title": "Content", "type": "string", "minLength": 1}, "referenced_text": {"title": "Referenced text", "type": "string", "x-nullable": true}, "section_reference": {"title": "Section reference", "type": "string", "maxLength": 100, "x-nullable": true}, "line_start": {"title": "Line start", "type": "integer", "maximum": 2147483647, "minimum": 0, "x-nullable": true}, "line_end": {"title": "Line end", "type": "integer", "maximum": 2147483647, "minimum": 0, "x-nullable": true}, "doi": {"title": "Doi", "type": "string", "readOnly": true, "minLength": 1, "x-nullable": true}, "status": {"title": "Status", "type": "string", "enum": ["draft", "submitted", "under_review", "accepted", "rejected", "published"]}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "status_date": {"title": "Status date", "type": "string", "format": "date-time", "readOnly": true}, "status_user": {"title": "Status user", "type": "integer", "x-nullable": true}, "is_ai_generated": {"title": "Is ai generated", "type": "boolean"}, "authors": {"type": "array", "items": {"$ref": "#/definitions/CommentAuthor"}, "readOnly": true}, "references": {"type": "array", "items": {"$ref": "#/definitions/CommentReference"}, "readOnly": true}, "conflict_of_interest": {"$ref": "#/definitions/ConflictOfInterest"}, "moderation": {"$ref": "#/definitions/CommentModeration"}, "comment_type_details": {"title": "Comment type details", "type": "string", "readOnly": true}, "document_version_details": {"title": "Document version details", "type": "string", "readOnly": true}, "parent_comment_details": {"title": "Parent comment details", "type": "string", "readOnly": true}, "status_user_details": {"title": "Status user details", "type": "string", "readOnly": true}, "chat_details": {"title": "Chat details", "type": "string", "readOnly": true}}}, "Attachment": {"required": ["document_version", "title", "file_type"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "document_version": {"title": "Document version", "type": "integer"}, "title": {"title": "Title", "type": "string", "maxLength": 255, "minLength": 1}, "description": {"title": "Description", "type": "string", "x-nullable": true}, "file": {"title": "File", "type": "string", "readOnly": true, "format": "uri"}, "file_type": {"title": "File type", "type": "string", "maxLength": 50, "minLength": 1}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}}}, "Author": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 255, "minLength": 1}, "address": {"title": "Address", "type": "string", "x-nullable": true}, "institution": {"title": "Institution", "type": "string", "maxLength": 255, "x-nullable": true}, "email": {"title": "Email", "type": "string", "format": "email", "maxLength": 254, "x-nullable": true}, "orcid": {"title": "Orcid", "type": "string", "maxLength": 50, "x-nullable": true}, "user": {"title": "User", "type": "integer", "x-nullable": true}, "order": {"title": "Order", "type": "integer", "maximum": 2147483647, "minimum": 0}, "is_corresponding": {"title": "Is corresponding", "type": "boolean"}, "user_details": {"title": "User details", "type": "string", "readOnly": true}}}, "DocumentVersionList": {"required": ["publication", "version_number"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "publication": {"title": "Publication", "type": "integer"}, "version_number": {"title": "Version number", "type": "integer", "maximum": 2147483647, "minimum": 0}, "doi": {"title": "Doi", "type": "string", "readOnly": true, "minLength": 1}, "technical_abstract": {"title": "Technical abstract", "type": "string", "x-nullable": true}, "release_date": {"title": "Release date", "type": "string", "format": "date", "x-nullable": true}, "status": {"title": "Status", "type": "string", "enum": ["draft", "submitted", "under_review", "revision", "accepted", "published", "archived"]}, "status_date": {"title": "Status date", "type": "string", "format": "date-time", "readOnly": true}}}, "Figure": {"required": ["document_version", "figure_number", "title", "caption"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "document_version": {"title": "Document version", "type": "integer"}, "figure_number": {"title": "Figure number", "type": "integer", "maximum": 2147483647, "minimum": 0}, "title": {"title": "Title", "type": "string", "maxLength": 500, "minLength": 1}, "caption": {"title": "Caption", "type": "string", "minLength": 1}, "image": {"title": "Image", "type": "string", "readOnly": true, "format": "uri"}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}}}, "Table": {"required": ["document_version", "table_number", "title", "caption", "content"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "document_version": {"title": "Document version", "type": "integer"}, "table_number": {"title": "Table number", "type": "integer", "maximum": 2147483647, "minimum": 0}, "title": {"title": "Title", "type": "string", "maxLength": 500, "minLength": 1}, "caption": {"title": "Caption", "type": "string", "minLength": 1}, "content": {"title": "Content", "type": "string", "minLength": 1}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}}}, "Keyword": {"required": ["document_version", "keyword"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "document_version": {"title": "Document version", "type": "integer"}, "keyword": {"title": "Keyword", "type": "string", "maxLength": 100, "minLength": 1}}}, "Reviewer": {"required": ["review_process", "user"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "review_process": {"title": "Review process", "type": "integer"}, "user": {"title": "User", "type": "integer"}, "invited_at": {"title": "Invited at", "type": "string", "format": "date-time", "readOnly": true}, "accepted_at": {"title": "Accepted at", "type": "string", "format": "date-time", "x-nullable": true}, "completed_at": {"title": "Completed at", "type": "string", "format": "date-time", "x-nullable": true}, "is_active": {"title": "Is active", "type": "boolean"}, "user_details": {"title": "User details", "type": "string", "readOnly": true}}}, "ReviewProcess": {"required": ["document_version"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "document_version": {"title": "Document version", "type": "integer"}, "handling_editor": {"title": "Handling editor", "type": "integer", "x-nullable": true}, "start_date": {"title": "Start date", "type": "string", "format": "date-time", "readOnly": true}, "end_date": {"title": "End date", "type": "string", "format": "date-time", "x-nullable": true}, "status": {"title": "Status", "type": "string", "enum": ["pending", "in_progress", "completed", "rejected"]}, "decision": {"title": "Decision", "type": "string", "x-nullable": true}, "reviewers": {"type": "array", "items": {"$ref": "#/definitions/Reviewer"}, "readOnly": true}, "handling_editor_details": {"title": "Handling editor details", "type": "string", "readOnly": true}}}, "DocumentVersion": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "publication": {"title": "Publication", "type": "integer", "readOnly": true}, "version_number": {"title": "Version number", "type": "integer", "readOnly": true}, "doi": {"title": "Doi", "type": "string", "readOnly": true, "minLength": 1}, "content": {"title": "Content", "type": "string", "x-nullable": true}, "technical_abstract": {"title": "Technical abstract", "type": "string", "x-nullable": true}, "non_technical_abstract": {"title": "Non technical abstract", "type": "string", "x-nullable": true}, "introduction": {"title": "Introduction", "type": "string", "x-nullable": true}, "methodology": {"title": "Methodology", "type": "string", "x-nullable": true}, "main_text": {"title": "Main text", "type": "string", "x-nullable": true}, "conclusion": {"title": "Conclusion", "type": "string", "x-nullable": true}, "author_contributions": {"title": "Author contributions", "type": "string", "x-nullable": true}, "conflicts_of_interest": {"title": "Conflicts of interest", "type": "string", "x-nullable": true}, "acknowledgments": {"title": "Acknowledgments", "type": "string", "x-nullable": true}, "funding": {"title": "Funding", "type": "string", "x-nullable": true}, "references": {"title": "References", "type": "string", "x-nullable": true}, "reviewer_response": {"title": "Reviewer response", "description": "Response to reviewer/editor recommendations for revised submissions", "type": "string", "x-nullable": true}, "metadata": {"title": "Metadata", "type": "object", "x-nullable": true}, "release_date": {"title": "Release date", "type": "string", "format": "date", "x-nullable": true}, "status": {"title": "Status", "type": "string", "enum": ["draft", "submitted", "under_review", "revision", "accepted", "published", "archived"]}, "status_date": {"title": "Status date", "type": "string", "format": "date-time", "readOnly": true}, "status_user": {"title": "Status user", "type": "integer", "x-nullable": true}, "authors": {"type": "array", "items": {"$ref": "#/definitions/Author"}, "readOnly": true}, "figures": {"type": "array", "items": {"$ref": "#/definitions/Figure"}, "readOnly": true}, "tables": {"type": "array", "items": {"$ref": "#/definitions/Table"}, "readOnly": true}, "keywords": {"type": "array", "items": {"$ref": "#/definitions/Keyword"}, "readOnly": true}, "attachments": {"type": "array", "items": {"$ref": "#/definitions/Attachment"}, "readOnly": true}, "review_process": {"$ref": "#/definitions/ReviewProcess"}, "status_user_details": {"title": "Status user details", "type": "string", "readOnly": true}}}, "PublicationList": {"required": ["title"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "meta_doi": {"title": "Meta doi", "type": "string", "maxLength": 200, "x-nullable": true}, "title": {"title": "Title", "type": "string", "maxLength": 500, "minLength": 1}, "short_title": {"title": "Short title", "type": "string", "maxLength": 200, "x-nullable": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "status": {"title": "Status", "type": "string", "enum": ["draft", "submitted", "under_review", "revision", "accepted", "published", "archived"]}, "current_version_number": {"title": "Current version number", "type": "string", "readOnly": true}, "authors": {"title": "Authors", "type": "string", "readOnly": true}, "created_by": {"title": "Created by", "type": "string", "readOnly": true}, "metadata": {"title": "Metadata", "type": "string", "readOnly": true}}}, "Publication": {"required": ["title"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "meta_doi": {"title": "Meta doi", "type": "string", "maxLength": 200, "x-nullable": true}, "title": {"title": "Title", "type": "string", "maxLength": 500, "minLength": 1}, "short_title": {"title": "Short title", "type": "string", "maxLength": 200, "x-nullable": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "status": {"title": "Status", "type": "string", "enum": ["draft", "submitted", "under_review", "revision", "accepted", "published", "archived"]}, "editorial_board": {"title": "Editorial board", "type": "integer", "x-nullable": true}, "document_versions": {"type": "array", "items": {"$ref": "#/definitions/DocumentVersionList"}, "readOnly": true}, "current_version": {"title": "Current version", "type": "string", "readOnly": true}, "editorial_board_details": {"title": "Editorial board details", "type": "string", "readOnly": true}, "content": {"title": "Content", "type": "string", "readOnly": true}, "technical_abstract": {"title": "Technical abstract", "type": "string", "readOnly": true}, "non_technical_abstract": {"title": "Non technical abstract", "type": "string", "readOnly": true}, "introduction": {"title": "Introduction", "type": "string", "readOnly": true}, "methodology": {"title": "Methodology", "type": "string", "readOnly": true}, "main_text": {"title": "Main text", "type": "string", "readOnly": true}, "conclusion": {"title": "Conclusion", "type": "string", "readOnly": true}, "author_contributions": {"title": "Author contributions", "type": "string", "readOnly": true}, "conflicts_of_interest": {"title": "Conflicts of interest", "type": "string", "readOnly": true}, "acknowledgments": {"title": "Acknowledgments", "type": "string", "readOnly": true}, "funding": {"title": "Funding", "type": "string", "readOnly": true}, "references": {"title": "References", "type": "string", "readOnly": true}, "reviewer_response": {"title": "Reviewer response", "type": "string", "readOnly": true}}}}}